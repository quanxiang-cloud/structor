// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/proto/dsl.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	anypb "google.golang.org/protobuf/types/known/anypb"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FindOneReq struct {
	TableName            string     `protobuf:"bytes,1,opt,name=tableName,proto3" json:"tableName,omitempty"`
	Dsl                  *anypb.Any `protobuf:"bytes,2,opt,name=dsl,proto3" json:"dsl,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *FindOneReq) Reset()         { *m = FindOneReq{} }
func (m *FindOneReq) String() string { return proto.CompactTextString(m) }
func (*FindOneReq) ProtoMessage()    {}
func (*FindOneReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_279353885e3c64ca, []int{0}
}

func (m *FindOneReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindOneReq.Unmarshal(m, b)
}
func (m *FindOneReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindOneReq.Marshal(b, m, deterministic)
}
func (m *FindOneReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindOneReq.Merge(m, src)
}
func (m *FindOneReq) XXX_Size() int {
	return xxx_messageInfo_FindOneReq.Size(m)
}
func (m *FindOneReq) XXX_DiscardUnknown() {
	xxx_messageInfo_FindOneReq.DiscardUnknown(m)
}

var xxx_messageInfo_FindOneReq proto.InternalMessageInfo

func (m *FindOneReq) GetTableName() string {
	if m != nil {
		return m.TableName
	}
	return ""
}

func (m *FindOneReq) GetDsl() *anypb.Any {
	if m != nil {
		return m.Dsl
	}
	return nil
}

type FindOneResp struct {
	Data                 *anypb.Any `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *FindOneResp) Reset()         { *m = FindOneResp{} }
func (m *FindOneResp) String() string { return proto.CompactTextString(m) }
func (*FindOneResp) ProtoMessage()    {}
func (*FindOneResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_279353885e3c64ca, []int{1}
}

func (m *FindOneResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindOneResp.Unmarshal(m, b)
}
func (m *FindOneResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindOneResp.Marshal(b, m, deterministic)
}
func (m *FindOneResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindOneResp.Merge(m, src)
}
func (m *FindOneResp) XXX_Size() int {
	return xxx_messageInfo_FindOneResp.Size(m)
}
func (m *FindOneResp) XXX_DiscardUnknown() {
	xxx_messageInfo_FindOneResp.DiscardUnknown(m)
}

var xxx_messageInfo_FindOneResp proto.InternalMessageInfo

func (m *FindOneResp) GetData() *anypb.Any {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*FindOneReq)(nil), "proto.FindOneReq")
	proto.RegisterType((*FindOneResp)(nil), "proto.FindOneResp")
}

func init() { proto.RegisterFile("api/proto/dsl.proto", fileDescriptor_279353885e3c64ca) }

var fileDescriptor_279353885e3c64ca = []byte{
	// 189 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4e, 0x2c, 0xc8, 0xd4,
	0x2f, 0x28, 0xca, 0x2f, 0xc9, 0xd7, 0x4f, 0x29, 0xce, 0xd1, 0x03, 0xb3, 0x84, 0x58, 0xc1, 0x94,
	0x94, 0x64, 0x7a, 0x7e, 0x7e, 0x7a, 0x4e, 0x2a, 0x44, 0x3a, 0xa9, 0x34, 0x4d, 0x3f, 0x31, 0xaf,
	0x12, 0xa2, 0x42, 0x29, 0x88, 0x8b, 0xcb, 0x2d, 0x33, 0x2f, 0xc5, 0x3f, 0x2f, 0x35, 0x28, 0xb5,
	0x50, 0x48, 0x86, 0x8b, 0xb3, 0x24, 0x31, 0x29, 0x27, 0xd5, 0x2f, 0x31, 0x37, 0x55, 0x82, 0x51,
	0x81, 0x51, 0x83, 0x33, 0x08, 0x21, 0x20, 0xa4, 0xc6, 0xc5, 0x9c, 0x52, 0x9c, 0x23, 0xc1, 0xa4,
	0xc0, 0xa8, 0xc1, 0x6d, 0x24, 0xa2, 0x07, 0x31, 0x54, 0x0f, 0x66, 0xa8, 0x9e, 0x63, 0x5e, 0x65,
	0x10, 0x48, 0x81, 0x92, 0x39, 0x17, 0x37, 0xdc, 0xcc, 0xe2, 0x02, 0x21, 0x0d, 0x2e, 0x96, 0x94,
	0xc4, 0x92, 0x44, 0xb0, 0x79, 0xb8, 0xf4, 0x81, 0x55, 0x18, 0xd9, 0x71, 0x71, 0xb9, 0x04, 0xfb,
	0x04, 0xa7, 0x16, 0x95, 0x65, 0x26, 0xa7, 0x0a, 0x19, 0x70, 0xb1, 0x43, 0x8d, 0x11, 0x12, 0x84,
	0xa8, 0xd6, 0x43, 0x38, 0x55, 0x4a, 0x08, 0x5d, 0xa8, 0xb8, 0x20, 0x89, 0x0d, 0x2c, 0x64, 0x0c,
	0x08, 0x00, 0x00, 0xff, 0xff, 0xab, 0x4e, 0xe0, 0xaf, 0x0c, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DSLServiceClient is the client API for DSLService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DSLServiceClient interface {
	FindOne(ctx context.Context, in *FindOneReq, opts ...grpc.CallOption) (*FindOneResp, error)
}

type dSLServiceClient struct {
	cc *grpc.ClientConn
}

func NewDSLServiceClient(cc *grpc.ClientConn) DSLServiceClient {
	return &dSLServiceClient{cc}
}

func (c *dSLServiceClient) FindOne(ctx context.Context, in *FindOneReq, opts ...grpc.CallOption) (*FindOneResp, error) {
	out := new(FindOneResp)
	err := c.cc.Invoke(ctx, "/proto.DSLService/FindOne", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DSLServiceServer is the server API for DSLService service.
type DSLServiceServer interface {
	FindOne(context.Context, *FindOneReq) (*FindOneResp, error)
}

// UnimplementedDSLServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDSLServiceServer struct {
}

func (*UnimplementedDSLServiceServer) FindOne(ctx context.Context, req *FindOneReq) (*FindOneResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindOne not implemented")
}

func RegisterDSLServiceServer(s *grpc.Server, srv DSLServiceServer) {
	s.RegisterService(&_DSLService_serviceDesc, srv)
}

func _DSLService_FindOne_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindOneReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DSLServiceServer).FindOne(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DSLService/FindOne",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DSLServiceServer).FindOne(ctx, req.(*FindOneReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _DSLService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.DSLService",
	HandlerType: (*DSLServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FindOne",
			Handler:    _DSLService_FindOne_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/proto/dsl.proto",
}
